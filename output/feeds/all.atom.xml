<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Carolin Zöbelein - Research</title><link href="/" rel="alternate"></link><link href="/feeds/all.atom.xml" rel="self"></link><id>/</id><updated>2021-06-22T20:00:00+02:00</updated><entry><title>Graph Property Driven Information Exchange in Distributed Networks</title><link href="/Projects/2021/Graph-Property-Driven-Information-Exchange-in-Distributed-Networks.html" rel="alternate"></link><published>2021-06-22T20:00:00+02:00</published><updated>2021-06-22T20:00:00+02:00</updated><author><name>Carolin Zöbelein</name></author><id>tag:None,2021-06-22:/Projects/2021/Graph-Property-Driven-Information-Exchange-in-Distributed-Networks.html</id><summary type="html">&lt;p&gt;Graph property driven information exchange is a new mathematical concept for describing data flow in distributed networks. It bases on five fundamentals.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Fundamental 1 (Universality &lt;span class="math"&gt;\(\mathbf{F_{uni}}\)&lt;/span&gt;). &lt;em&gt;All characteristics of a network participant are describable by the same mathematical structure (everything is considered to be an 'object').&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Fundamental 2 (Duality &lt;span class="math"&gt;\(\mathbf{F_{dua}}\)&lt;/span&gt;). &lt;em&gt;Network topologies and characteristics of network participants are mathematical describable by the same mathematical object structure.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Fundamental 3 (Vicariousness &lt;span class="math"&gt;\(\mathbf{F_{vic}}\)&lt;/span&gt;). &lt;em&gt;Data information exchange doesn't happen directly. It happens indirectly by property or property information exchange.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Fundamental 4 (Property Driven &lt;span class="math"&gt;\(\mathbf{F_{prd}}\)&lt;/span&gt;). &lt;em&gt;Protocol states are (equilibrium) states of graph properties. Properties are the driving force of each network protocol living on a distributed network which is based on the fundamentals 1, 2 and 3.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Fundamental 5 (Physical Realness &lt;span class="math"&gt;\(\mathbf{F_{phr}}\)&lt;/span&gt;). &lt;em&gt;Property driven disributed networks can be represented by physical structures initiated by fundamental 4.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This fundamentals are derived by already existing models (see also the following section 'Background'), and finally connected by an enhancement of graph theory which we introduce by our work.&lt;/p&gt;
&lt;h3&gt;Background&lt;/h3&gt;

&lt;p&gt;We give a recap of three existing, math orientated, models for description and analysis of distributed networks.&lt;/p&gt;
&lt;h5&gt;&lt;i&gt;Graph Models&lt;/i&gt;&lt;/h5&gt;

&lt;p&gt;The most known model for describing distributed networks is given by graph theory. Let &lt;span class="math"&gt;\(G = \left(V, E\right)\)&lt;/span&gt; be a &lt;em&gt;graph&lt;/em&gt; with a finite set of &lt;em&gt;vertices&lt;/em&gt; &lt;span class="math"&gt;\(v_{i} \in V\)&lt;/span&gt; and &lt;em&gt;edges&lt;/em&gt; &lt;span class="math"&gt;\(e_{k} = \left(v_{i}, v_{j}\right) \in E\)&lt;/span&gt; with &lt;span class="math"&gt;\(E := V \times V\)&lt;/span&gt;. We identify vertices, also called nodes, with participants (clients and servers) of the network and edges with communication channels between them, which forms the individual topology of the system. Given such a basic graph description, we can enhance it by several properties observed in context of distributed networks [1].&lt;/p&gt;
&lt;p&gt;Assume each participant of the network run its communication over several open &lt;em&gt;ports&lt;/em&gt;, then we can define a &lt;em&gt;port-numbered network&lt;/em&gt; by a triple &lt;span class="math"&gt;\(N = \left(V, P, p\right)\)&lt;/span&gt;, with &lt;span class="math"&gt;\(V\)&lt;/span&gt; be the set of vertices, &lt;span class="math"&gt;\(P\)&lt;/span&gt; be the set of ports, and &lt;span class="math"&gt;\(p : P \rightarrow P\)&lt;/span&gt; be a function that gives us the connections between ports, so that each port is given by a pair &lt;span class="math"&gt;\(\left(v_{i},q_{i}\right)\)&lt;/span&gt;, where &lt;span class="math"&gt;\(v_{i} \in V\)&lt;/span&gt; and &lt;span class="math"&gt;\(q_{i} \in \{1, 2, \dots \}\)&lt;/span&gt;. We call this a &lt;em&gt;port-numbering model (PN model)&lt;/em&gt; [1]. Furthermore, if we assign &lt;em&gt;unique identifiers&lt;/em&gt; for a port-numbered network by an injection &lt;span class="math"&gt;\(id : V \rightarrow \{1, 2, \dots, |V|^{c} \}\)&lt;/span&gt;, for a fix constant &lt;span class="math"&gt;\(c &amp;gt; 1\)&lt;/span&gt;, so that each vertex &lt;span class="math"&gt;\(v_{i} \in V\)&lt;/span&gt; is labeled with an unique integer, with labels which are assumed to be relatively small, we call this a &lt;em&gt;network with unique identifiers (LOCAL model)&lt;/em&gt; [1]. Finally, we assume a &lt;em&gt;bandwidth restriction&lt;/em&gt; in each communication round, over each edge, so that we are only able to send &lt;span class="math"&gt;\(\mathcal{O}\left(\log\left(|V|\right)\right)\)&lt;/span&gt;-bit messages &lt;span class="math"&gt;\(\mathrm{Msg}_{A}\)&lt;/span&gt; encoded as natural numbers &lt;span class="math"&gt;\(\mathbb{N}\)&lt;/span&gt; on a distributed algorithm &lt;span class="math"&gt;\(A\)&lt;/span&gt;. We call this a &lt;em&gt;bandwidth restriction model (CONGEST model)&lt;/em&gt; [1].&lt;/p&gt;
&lt;h5&gt;&lt;i&gt;Combinatorial Topology&lt;/i&gt;&lt;/h5&gt;

&lt;p&gt;In the 1990s &lt;em&gt;combinatorial topology&lt;/em&gt;, an &lt;em&gt;extending graph theory to higher dimensional objects&lt;/em&gt;, was shown to provide a framework for a large variety of distributed computing models [2] [3]. It represents all possible executions of a distributed algorithm as well as the relations between them, as a single mathematical object, whose properties reflect the solvability of a problem and primary used to study failure-tolerant networks in the context of shared memory and message passing systems.&lt;/p&gt;
&lt;p&gt;&lt;center&gt;
    &lt;img alt="Combinatorial Topology Example" src="/images/projects/combinatoricaltopology.png" /&gt;
&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;&lt;center&gt;
    &lt;b style="font-size: 0.85em;"&gt;Figure 1: Example for a combinatorical topology model. Impact of the information-flow graph on the protocol complex for a binary consensus with three processes. Labels give the input and output values, in the input and output complexes respectively, or views in protocol complexes [3].&lt;/b&gt;
&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;In this concept, all possible input (output) configurations are modelled as a single object called &lt;em&gt;input (output) complex&lt;/em&gt; (see figure 1 first respectively fourth graph), specifying a task as a relation between the input and output complexes. Computation results in a &lt;em&gt;topological deformation&lt;/em&gt; that modifies this complexes into another complex, called &lt;em&gt;protocol complex&lt;/em&gt; (see figure 1 second respectively third graph). A task is solvable in a computational model if and only if there exists a simplicial map, called &lt;em&gt;decision map&lt;/em&gt;, given by the protocol complex to the output complex. For every input configuration, the execution of an algorithm leads to one or many system configurations, which equals a subcomplex of the protocol complex, and the decision map, maps every of this configurations of the subcomplex into a, legal for the given input, configuration of the output complex. The understanding of distributed algorithms lies in the understanding of topological deformations and decision maps [3].&lt;/p&gt;
&lt;h5&gt;&lt;i&gt;Algebraic Structures&lt;/i&gt;&lt;/h5&gt;

&lt;p&gt;Apart from graph theory also other models for distributed networks have been considered [4] like an alternative characterisation of object-based distributed systems in terms of algebraic structures [5]. Here, &lt;em&gt;objects&lt;/em&gt; represent an abstraction for distinct types of entities, such as humans, intelligent agents, accounts, software components or processing units. By the usage of a &lt;em&gt;temporal logic language&lt;/em&gt;, they specify &lt;em&gt;local object behaviours&lt;/em&gt; by &lt;em&gt;local constraints&lt;/em&gt;, which restrict the set of life cycles admissible for each object. During in other models participants interact by asynchronous messages communications (receiving, manipulation, sending), here, objects comply with &lt;em&gt;synchronous&lt;/em&gt;, &lt;em&gt;event based interaction&lt;/em&gt; [5].&lt;/p&gt;
&lt;p&gt;The algebra is given by some basic definitions, like for time which is considered by &lt;em&gt;time frames&lt;/em&gt;, a (&lt;span class="math"&gt;\(n\)&lt;/span&gt; algebraic) structure &lt;span class="math"&gt;\(\langle\langle T, \leq \rangle,L\rangle\)&lt;/span&gt; (reflexiv, anti-symmetric and transitive), where &lt;span class="math"&gt;\(L\)&lt;/span&gt; is a set of &lt;em&gt;linear time flows&lt;/em&gt; (linear, injective, surjective, monotone), for &lt;em&gt;object structures&lt;/em&gt;, a &lt;span class="math"&gt;\(5\)&lt;/span&gt;-tuple &lt;span class="math"&gt;\(\langle \mathcal{T}, \mathcal{V}, \mathcal{L}, B, P \rangle\)&lt;/span&gt; in terms of the disjoint non-empty sets &lt;span class="math"&gt;\(\mathbf{T}\)&lt;/span&gt; (time domain), &lt;span class="math"&gt;\(\mathbf{Ev}\)&lt;/span&gt; (event domain) and &lt;span class="math"&gt;\(\mathbf{Loc}\)&lt;/span&gt; (location domain), with &lt;span class="math"&gt;\(\mathcal{T}\)&lt;/span&gt; be a time frame, &lt;span class="math"&gt;\(\mathcal{V}\)&lt;/span&gt; be an &lt;em&gt;event structure&lt;/em&gt; in terms of event domain &lt;span class="math"&gt;\(\mathbf{Ev}\)&lt;/span&gt;, &lt;span class="math"&gt;\(\mathcal{L}\)&lt;/span&gt; be a &lt;em&gt;location structure&lt;/em&gt; in terms of location domain &lt;span class="math"&gt;\(\mathbf{Loc}\)&lt;/span&gt;, &lt;span class="math"&gt;\(B : \mathbf{Ev} \rightarrow \mathcal{P}\left(\mathcal{I}_{+}\left(\mathrm{cod} \ L\right)\right)\)&lt;/span&gt; be a &lt;em&gt;behaviour&lt;/em&gt; and &lt;span class="math"&gt;\(P : \mathbf{Loc} \rightarrow \mathcal{P}\left(\mathcal{I}_{+}\left(\mathrm{cod} \ L\right)\right)\)&lt;/span&gt; be a &lt;em&gt;placement&lt;/em&gt; (&lt;span class="math"&gt;\(\mathcal{P}\left(X\right)\)&lt;/span&gt; be the set of all subsets of &lt;span class="math"&gt;\(X\)&lt;/span&gt;, &lt;span class="math"&gt;\(\mathcal{I}\left(X\right)\)&lt;/span&gt; be the of all open intervals in terms of &lt;span class="math"&gt;\(X\)&lt;/span&gt;). Finally, a &lt;em&gt;distributed system model&lt;/em&gt; is given by a &lt;span class="math"&gt;\(4\)&lt;/span&gt;-tuple &lt;span class="math"&gt;\(\langle \mathcal{O}, E, I, C \rangle\)&lt;/span&gt;, with &lt;span class="math"&gt;\(\mathcal{O}\)&lt;/span&gt; be an &lt;em&gt;object universe&lt;/em&gt;, a countable set of object structures, &lt;span class="math"&gt;\(E : \mathcal{O} \rightarrow \mathbf{Bool}\)&lt;/span&gt; be an &lt;em&gt;environment&lt;/em&gt; identification function, &lt;span class="math"&gt;\(I : \mathcal{O} \rightarrow \mathbf{Bool}\)&lt;/span&gt; be an &lt;em&gt;internal object&lt;/em&gt; identification function, and &lt;span class="math"&gt;\(C : \mathcal{O} \rightarrow \mathcal{O}\)&lt;/span&gt; be a partial map which induces a family of &lt;em&gt;time correlation functions&lt;/em&gt; [5].&lt;/p&gt;
&lt;h3&gt;References&lt;/h3&gt;

&lt;p&gt;[1] Juho Hirvonen and Jukka Suomela. 2020. Distributed Algorithms 2020. Aalto University, Finland. &lt;a href="https://jukkasuomela.fi/da2020/" title="External: Distributed Algorithms" target="_blank"&gt;https://jukkasuomela.fi/da2020/&lt;/a&gt;, &lt;a href="https://jukkasuomela.fi/da2020/da2020.pdf" title="External: Distributed Algorithms - .pdf" target="_blank"&gt;https://jukkasuomela.fi/da2020/da2020.pdf&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;[2] Maurice Herlihy, Dmitry Kozlov, and Sergio Rajsbaum. 2013. Distributed computing through combinatorial topology. Newnes.&lt;/p&gt;
&lt;p&gt;[3] Armando Castañeda, Pierre Fraigniaud, Ami Paz, Sergio Rajsbaum, Matthieu Roy, and Corentin Travers. 2021. A topological perspective on distributed network algorithms. Theoretical Computer Science 849 (2021), 121–137.&lt;/p&gt;
&lt;p&gt;[4] Leslie Lamport and Nancy Lynch. 1990. Distributed computing: Models and methods. In Formal models and semantics. Elsevier, 1157–1199.&lt;/p&gt;
&lt;p&gt;[5] Carlos Henrique C Duarte. 2011. Mathematical models of object-based distributed systems. In Formal Modeling: Actors, Open Systems, Biological Systems. Springer, 57–73.&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</summary><content type="html">&lt;p&gt;Graph property driven information exchange is a new mathematical concept for describing data flow in distributed networks. It bases on five fundamentals.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Fundamental 1 (Universality &lt;span class="math"&gt;\(\mathbf{F_{uni}}\)&lt;/span&gt;). &lt;em&gt;All characteristics of a network participant are describable by the same mathematical structure (everything is considered to be an 'object').&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Fundamental 2 (Duality &lt;span class="math"&gt;\(\mathbf{F_{dua}}\)&lt;/span&gt;). &lt;em&gt;Network topologies and characteristics of network participants are mathematical describable by the same mathematical object structure.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Fundamental 3 (Vicariousness &lt;span class="math"&gt;\(\mathbf{F_{vic}}\)&lt;/span&gt;). &lt;em&gt;Data information exchange doesn't happen directly. It happens indirectly by property or property information exchange.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Fundamental 4 (Property Driven &lt;span class="math"&gt;\(\mathbf{F_{prd}}\)&lt;/span&gt;). &lt;em&gt;Protocol states are (equilibrium) states of graph properties. Properties are the driving force of each network protocol living on a distributed network which is based on the fundamentals 1, 2 and 3.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Fundamental 5 (Physical Realness &lt;span class="math"&gt;\(\mathbf{F_{phr}}\)&lt;/span&gt;). &lt;em&gt;Property driven disributed networks can be represented by physical structures initiated by fundamental 4.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This fundamentals are derived by already existing models (see also the following section 'Background'), and finally connected by an enhancement of graph theory which we introduce by our work.&lt;/p&gt;
&lt;h3&gt;Background&lt;/h3&gt;

&lt;p&gt;We give a recap of three existing, math orientated, models for description and analysis of distributed networks.&lt;/p&gt;
&lt;h5&gt;&lt;i&gt;Graph Models&lt;/i&gt;&lt;/h5&gt;

&lt;p&gt;The most known model for describing distributed networks is given by graph theory. Let &lt;span class="math"&gt;\(G = \left(V, E\right)\)&lt;/span&gt; be a &lt;em&gt;graph&lt;/em&gt; with a finite set of &lt;em&gt;vertices&lt;/em&gt; &lt;span class="math"&gt;\(v_{i} \in V\)&lt;/span&gt; and &lt;em&gt;edges&lt;/em&gt; &lt;span class="math"&gt;\(e_{k} = \left(v_{i}, v_{j}\right) \in E\)&lt;/span&gt; with &lt;span class="math"&gt;\(E := V \times V\)&lt;/span&gt;. We identify vertices, also called nodes, with participants (clients and servers) of the network and edges with communication channels between them, which forms the individual topology of the system. Given such a basic graph description, we can enhance it by several properties observed in context of distributed networks [1].&lt;/p&gt;
&lt;p&gt;Assume each participant of the network run its communication over several open &lt;em&gt;ports&lt;/em&gt;, then we can define a &lt;em&gt;port-numbered network&lt;/em&gt; by a triple &lt;span class="math"&gt;\(N = \left(V, P, p\right)\)&lt;/span&gt;, with &lt;span class="math"&gt;\(V\)&lt;/span&gt; be the set of vertices, &lt;span class="math"&gt;\(P\)&lt;/span&gt; be the set of ports, and &lt;span class="math"&gt;\(p : P \rightarrow P\)&lt;/span&gt; be a function that gives us the connections between ports, so that each port is given by a pair &lt;span class="math"&gt;\(\left(v_{i},q_{i}\right)\)&lt;/span&gt;, where &lt;span class="math"&gt;\(v_{i} \in V\)&lt;/span&gt; and &lt;span class="math"&gt;\(q_{i} \in \{1, 2, \dots \}\)&lt;/span&gt;. We call this a &lt;em&gt;port-numbering model (PN model)&lt;/em&gt; [1]. Furthermore, if we assign &lt;em&gt;unique identifiers&lt;/em&gt; for a port-numbered network by an injection &lt;span class="math"&gt;\(id : V \rightarrow \{1, 2, \dots, |V|^{c} \}\)&lt;/span&gt;, for a fix constant &lt;span class="math"&gt;\(c &amp;gt; 1\)&lt;/span&gt;, so that each vertex &lt;span class="math"&gt;\(v_{i} \in V\)&lt;/span&gt; is labeled with an unique integer, with labels which are assumed to be relatively small, we call this a &lt;em&gt;network with unique identifiers (LOCAL model)&lt;/em&gt; [1]. Finally, we assume a &lt;em&gt;bandwidth restriction&lt;/em&gt; in each communication round, over each edge, so that we are only able to send &lt;span class="math"&gt;\(\mathcal{O}\left(\log\left(|V|\right)\right)\)&lt;/span&gt;-bit messages &lt;span class="math"&gt;\(\mathrm{Msg}_{A}\)&lt;/span&gt; encoded as natural numbers &lt;span class="math"&gt;\(\mathbb{N}\)&lt;/span&gt; on a distributed algorithm &lt;span class="math"&gt;\(A\)&lt;/span&gt;. We call this a &lt;em&gt;bandwidth restriction model (CONGEST model)&lt;/em&gt; [1].&lt;/p&gt;
&lt;h5&gt;&lt;i&gt;Combinatorial Topology&lt;/i&gt;&lt;/h5&gt;

&lt;p&gt;In the 1990s &lt;em&gt;combinatorial topology&lt;/em&gt;, an &lt;em&gt;extending graph theory to higher dimensional objects&lt;/em&gt;, was shown to provide a framework for a large variety of distributed computing models [2] [3]. It represents all possible executions of a distributed algorithm as well as the relations between them, as a single mathematical object, whose properties reflect the solvability of a problem and primary used to study failure-tolerant networks in the context of shared memory and message passing systems.&lt;/p&gt;
&lt;p&gt;&lt;center&gt;
    &lt;img alt="Combinatorial Topology Example" src="/images/projects/combinatoricaltopology.png" /&gt;
&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;&lt;center&gt;
    &lt;b style="font-size: 0.85em;"&gt;Figure 1: Example for a combinatorical topology model. Impact of the information-flow graph on the protocol complex for a binary consensus with three processes. Labels give the input and output values, in the input and output complexes respectively, or views in protocol complexes [3].&lt;/b&gt;
&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;In this concept, all possible input (output) configurations are modelled as a single object called &lt;em&gt;input (output) complex&lt;/em&gt; (see figure 1 first respectively fourth graph), specifying a task as a relation between the input and output complexes. Computation results in a &lt;em&gt;topological deformation&lt;/em&gt; that modifies this complexes into another complex, called &lt;em&gt;protocol complex&lt;/em&gt; (see figure 1 second respectively third graph). A task is solvable in a computational model if and only if there exists a simplicial map, called &lt;em&gt;decision map&lt;/em&gt;, given by the protocol complex to the output complex. For every input configuration, the execution of an algorithm leads to one or many system configurations, which equals a subcomplex of the protocol complex, and the decision map, maps every of this configurations of the subcomplex into a, legal for the given input, configuration of the output complex. The understanding of distributed algorithms lies in the understanding of topological deformations and decision maps [3].&lt;/p&gt;
&lt;h5&gt;&lt;i&gt;Algebraic Structures&lt;/i&gt;&lt;/h5&gt;

&lt;p&gt;Apart from graph theory also other models for distributed networks have been considered [4] like an alternative characterisation of object-based distributed systems in terms of algebraic structures [5]. Here, &lt;em&gt;objects&lt;/em&gt; represent an abstraction for distinct types of entities, such as humans, intelligent agents, accounts, software components or processing units. By the usage of a &lt;em&gt;temporal logic language&lt;/em&gt;, they specify &lt;em&gt;local object behaviours&lt;/em&gt; by &lt;em&gt;local constraints&lt;/em&gt;, which restrict the set of life cycles admissible for each object. During in other models participants interact by asynchronous messages communications (receiving, manipulation, sending), here, objects comply with &lt;em&gt;synchronous&lt;/em&gt;, &lt;em&gt;event based interaction&lt;/em&gt; [5].&lt;/p&gt;
&lt;p&gt;The algebra is given by some basic definitions, like for time which is considered by &lt;em&gt;time frames&lt;/em&gt;, a (&lt;span class="math"&gt;\(n\)&lt;/span&gt; algebraic) structure &lt;span class="math"&gt;\(\langle\langle T, \leq \rangle,L\rangle\)&lt;/span&gt; (reflexiv, anti-symmetric and transitive), where &lt;span class="math"&gt;\(L\)&lt;/span&gt; is a set of &lt;em&gt;linear time flows&lt;/em&gt; (linear, injective, surjective, monotone), for &lt;em&gt;object structures&lt;/em&gt;, a &lt;span class="math"&gt;\(5\)&lt;/span&gt;-tuple &lt;span class="math"&gt;\(\langle \mathcal{T}, \mathcal{V}, \mathcal{L}, B, P \rangle\)&lt;/span&gt; in terms of the disjoint non-empty sets &lt;span class="math"&gt;\(\mathbf{T}\)&lt;/span&gt; (time domain), &lt;span class="math"&gt;\(\mathbf{Ev}\)&lt;/span&gt; (event domain) and &lt;span class="math"&gt;\(\mathbf{Loc}\)&lt;/span&gt; (location domain), with &lt;span class="math"&gt;\(\mathcal{T}\)&lt;/span&gt; be a time frame, &lt;span class="math"&gt;\(\mathcal{V}\)&lt;/span&gt; be an &lt;em&gt;event structure&lt;/em&gt; in terms of event domain &lt;span class="math"&gt;\(\mathbf{Ev}\)&lt;/span&gt;, &lt;span class="math"&gt;\(\mathcal{L}\)&lt;/span&gt; be a &lt;em&gt;location structure&lt;/em&gt; in terms of location domain &lt;span class="math"&gt;\(\mathbf{Loc}\)&lt;/span&gt;, &lt;span class="math"&gt;\(B : \mathbf{Ev} \rightarrow \mathcal{P}\left(\mathcal{I}_{+}\left(\mathrm{cod} \ L\right)\right)\)&lt;/span&gt; be a &lt;em&gt;behaviour&lt;/em&gt; and &lt;span class="math"&gt;\(P : \mathbf{Loc} \rightarrow \mathcal{P}\left(\mathcal{I}_{+}\left(\mathrm{cod} \ L\right)\right)\)&lt;/span&gt; be a &lt;em&gt;placement&lt;/em&gt; (&lt;span class="math"&gt;\(\mathcal{P}\left(X\right)\)&lt;/span&gt; be the set of all subsets of &lt;span class="math"&gt;\(X\)&lt;/span&gt;, &lt;span class="math"&gt;\(\mathcal{I}\left(X\right)\)&lt;/span&gt; be the of all open intervals in terms of &lt;span class="math"&gt;\(X\)&lt;/span&gt;). Finally, a &lt;em&gt;distributed system model&lt;/em&gt; is given by a &lt;span class="math"&gt;\(4\)&lt;/span&gt;-tuple &lt;span class="math"&gt;\(\langle \mathcal{O}, E, I, C \rangle\)&lt;/span&gt;, with &lt;span class="math"&gt;\(\mathcal{O}\)&lt;/span&gt; be an &lt;em&gt;object universe&lt;/em&gt;, a countable set of object structures, &lt;span class="math"&gt;\(E : \mathcal{O} \rightarrow \mathbf{Bool}\)&lt;/span&gt; be an &lt;em&gt;environment&lt;/em&gt; identification function, &lt;span class="math"&gt;\(I : \mathcal{O} \rightarrow \mathbf{Bool}\)&lt;/span&gt; be an &lt;em&gt;internal object&lt;/em&gt; identification function, and &lt;span class="math"&gt;\(C : \mathcal{O} \rightarrow \mathcal{O}\)&lt;/span&gt; be a partial map which induces a family of &lt;em&gt;time correlation functions&lt;/em&gt; [5].&lt;/p&gt;
&lt;h3&gt;References&lt;/h3&gt;

&lt;p&gt;[1] Juho Hirvonen and Jukka Suomela. 2020. Distributed Algorithms 2020. Aalto University, Finland. &lt;a href="https://jukkasuomela.fi/da2020/" title="External: Distributed Algorithms" target="_blank"&gt;https://jukkasuomela.fi/da2020/&lt;/a&gt;, &lt;a href="https://jukkasuomela.fi/da2020/da2020.pdf" title="External: Distributed Algorithms - .pdf" target="_blank"&gt;https://jukkasuomela.fi/da2020/da2020.pdf&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;[2] Maurice Herlihy, Dmitry Kozlov, and Sergio Rajsbaum. 2013. Distributed computing through combinatorial topology. Newnes.&lt;/p&gt;
&lt;p&gt;[3] Armando Castañeda, Pierre Fraigniaud, Ami Paz, Sergio Rajsbaum, Matthieu Roy, and Corentin Travers. 2021. A topological perspective on distributed network algorithms. Theoretical Computer Science 849 (2021), 121–137.&lt;/p&gt;
&lt;p&gt;[4] Leslie Lamport and Nancy Lynch. 1990. Distributed computing: Models and methods. In Formal models and semantics. Elsevier, 1157–1199.&lt;/p&gt;
&lt;p&gt;[5] Carlos Henrique C Duarte. 2011. Mathematical models of object-based distributed systems. In Formal Modeling: Actors, Open Systems, Biological Systems. Springer, 57–73.&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="Distributed Networks"></category><category term="Graph Theory"></category><category term="Graph Properties"></category><category term="Decentralization"></category><category term="Protocol"></category><category term="Math"></category><category term="CS"></category><category term="Mathematical Computer Science"></category><category term="Project"></category></entry><entry><title>Mathematical Analysis of Online Network Protocols</title><link href="/Projects/2020/Mathematical-Analysis-of-Online-Network-Protocols.html" rel="alternate"></link><published>2021-01-01T10:00:00+01:00</published><updated>2021-01-01T10:00:00+01:00</updated><author><name>Carolin Zöbelein</name></author><id>tag:None,2021-01-01:/Projects/2020/Mathematical-Analysis-of-Online-Network-Protocols.html</id><summary type="html">&lt;p&gt;By the approach of mathematical computer science, we set a mathematical analysis description of online network protocols like TCP or SMTP.&lt;/p&gt;</summary><content type="html">&lt;p&gt;By the approach of mathematical computer science, we set a mathematical analysis description of online network protocols like TCP or SMTP.&lt;/p&gt;</content><category term="Online Network Protocols"></category><category term="Mathematical Analysis"></category><category term="Math"></category><category term="CS"></category><category term="Mathematical Computer Science"></category><category term="Project"></category></entry><entry><title>Notes: Grundy values and distinct distances</title><link href="/Public/Publications/Notes-Grundy-values-and-distinct-distances.html" rel="alternate"></link><published>2020-03-28T23:59:00+01:00</published><updated>2020-03-28T23:59:00+01:00</updated><author><name>Carolin Zöbelein</name></author><id>tag:None,2020-03-28:/Public/Publications/Notes-Grundy-values-and-distinct-distances.html</id><summary type="html">&lt;ul&gt;
&lt;li&gt;Preamble&lt;/li&gt;
&lt;li&gt;1 Introduction&lt;/li&gt;
&lt;li&gt;2 Grundy values&lt;/li&gt;
&lt;li&gt;2.1 Definition&lt;/li&gt;
&lt;li&gt;2.2 Element determination&lt;/li&gt;
&lt;li&gt;3 Distance examinations&lt;/li&gt;
&lt;li&gt;3.1 First appearances within Grundy sequence&lt;/li&gt;
&lt;li&gt;3.2 Positions of sequence elements&lt;/li&gt;
&lt;li&gt;3.3 Position distance of first appearances&lt;/li&gt;
&lt;li&gt;3.4 Position distance of problem statement sequence&lt;/li&gt;
&lt;li&gt;3.5 Distance between same number appearences&lt;/li&gt;
&lt;li&gt;4 Conclusion&lt;/li&gt;
&lt;li&gt;Acknowledgement  &lt;/li&gt;
&lt;li&gt;License&lt;/li&gt;
&lt;/ul&gt;</summary><content type="html">&lt;ul&gt;
&lt;li&gt;Preamble&lt;/li&gt;
&lt;li&gt;1 Introduction&lt;/li&gt;
&lt;li&gt;2 Grundy values&lt;/li&gt;
&lt;li&gt;2.1 Definition&lt;/li&gt;
&lt;li&gt;2.2 Element determination&lt;/li&gt;
&lt;li&gt;3 Distance examinations&lt;/li&gt;
&lt;li&gt;3.1 First appearances within Grundy sequence&lt;/li&gt;
&lt;li&gt;3.2 Positions of sequence elements&lt;/li&gt;
&lt;li&gt;3.3 Position distance of first appearances&lt;/li&gt;
&lt;li&gt;3.4 Position distance of problem statement sequence&lt;/li&gt;
&lt;li&gt;3.5 Distance between same number appearences&lt;/li&gt;
&lt;li&gt;4 Conclusion&lt;/li&gt;
&lt;li&gt;Acknowledgement  &lt;/li&gt;
&lt;li&gt;License&lt;/li&gt;
&lt;/ul&gt;</content><category term="Publication"></category><category term="Notes"></category></entry><entry><title>Prior Knowledge MLT [on hold since Corona]</title><link href="/Projects/2020/Prior-Knowledge-MLT.html" rel="alternate"></link><published>2020-03-01T10:00:00+01:00</published><updated>2020-03-01T10:00:00+01:00</updated><author><name>Carolin Zöbelein</name></author><id>tag:None,2020-03-01:/Projects/2020/Prior-Knowledge-MLT.html</id><summary type="html">&lt;p&gt;Prior Knowledge Machine Learning Translation (MLT) uses advanced mathematical descriptions for language groups to reduce maximal error bounds and the number of free parameters of machine learning based translation.&lt;/p&gt;</summary><content type="html">&lt;p&gt;Prior Knowledge Machine Learning Translation (MLT) uses advanced mathematical descriptions for language groups to reduce maximal error bounds and the number of free parameters of machine learning based translation.&lt;/p&gt;</content><category term="Prior Knowledge"></category><category term="Machine Learning"></category><category term="Translation"></category><category term="Math"></category><category term="Project"></category></entry><entry><title>MfDN-Protocol</title><link href="/Projects/2019/MfDN-Protocol.html" rel="alternate"></link><published>2020-02-27T10:00:00+01:00</published><updated>2020-02-27T10:00:00+01:00</updated><author><name>Carolin Zöbelein</name></author><id>tag:None,2020-02-27:/Projects/2019/MfDN-Protocol.html</id><summary type="html">&lt;p&gt;A mathematical forced decentralized network protocol&lt;/p&gt;</summary><content type="html">&lt;p&gt;A mathematical forced decentralized network protocol&lt;/p&gt;</content><category term="Decentralization"></category><category term="Protocol"></category><category term="Math"></category><category term="Privacy"></category><category term="Project"></category></entry><entry><title>Notes: Basic conditions for a mathematical forced decentralized network protocol (MfDN-Protocol)</title><link href="/Public/Publications/Notes-Basic-conditions-for-a-mathematical-forced-decentralized-network-protocol-MfDN-Protocol.html" rel="alternate"></link><published>2020-02-20T23:59:00+01:00</published><updated>2020-02-20T23:59:00+01:00</updated><author><name>Carolin Zöbelein</name></author><id>tag:None,2020-02-20:/Public/Publications/Notes-Basic-conditions-for-a-mathematical-forced-decentralized-network-protocol-MfDN-Protocol.html</id><summary type="html">&lt;ul&gt;
&lt;li&gt;
&lt;ol&gt;
&lt;li&gt;Introduction  &lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ol&gt;
&lt;li&gt;What does MfDN-Protocol mean?  &lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;2.1. Centralized service  &lt;/li&gt;
&lt;li&gt;2.2. Classical decentralized service  &lt;/li&gt;
&lt;li&gt;2.3. Mathematical forced decentralized service  &lt;/li&gt;
&lt;li&gt;
&lt;ol&gt;
&lt;li&gt;Critical design questions  &lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ol&gt;
&lt;li&gt;Main decentralization points  &lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ol&gt;
&lt;li&gt;Conclusion  &lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ol&gt;
&lt;li&gt;Further Information  &lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;Acknowledgement  &lt;/li&gt;
&lt;li&gt;License&lt;/li&gt;
&lt;/ul&gt;</summary><content type="html">&lt;ul&gt;
&lt;li&gt;
&lt;ol&gt;
&lt;li&gt;Introduction  &lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ol&gt;
&lt;li&gt;What does MfDN-Protocol mean?  &lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;2.1. Centralized service  &lt;/li&gt;
&lt;li&gt;2.2. Classical decentralized service  &lt;/li&gt;
&lt;li&gt;2.3. Mathematical forced decentralized service  &lt;/li&gt;
&lt;li&gt;
&lt;ol&gt;
&lt;li&gt;Critical design questions  &lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ol&gt;
&lt;li&gt;Main decentralization points  &lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ol&gt;
&lt;li&gt;Conclusion  &lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ol&gt;
&lt;li&gt;Further Information  &lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;Acknowledgement  &lt;/li&gt;
&lt;li&gt;License&lt;/li&gt;
&lt;/ul&gt;</content><category term="Publication"></category><category term="Notes"></category></entry><entry><title>NGI Zero: Search and Discovery Fund</title><link href="/Funding/2019/NGI-Zero-Search-and-Discovery-Fund.html" rel="alternate"></link><published>2019-12-10T10:00:00+01:00</published><updated>2019-12-10T10:00:00+01:00</updated><author><name>Carolin Zöbelein</name></author><id>tag:None,2019-12-10:/Funding/2019/NGI-Zero-Search-and-Discovery-Fund.html</id><summary type="html">&lt;p&gt;NLnet manages the &lt;a href="https://nlnet.nl/discovery" target="_blank"&gt;NGI0 Discovery Fund&lt;/a&gt;, a fund dedicated to search technologies which creates an open, trustworthy and reliable internet for all. The fund was established with financial support from the &lt;a href="https://ec.europa.eu" target="_blank"&gt;European Commission&lt;/a&gt;'s &lt;a href="https://ngi.eu" target="_blank"&gt;Next Generation Internet&lt;/a&gt; programme, under the aegis of &lt;a href="https://ec.europa.eu/info/departments/communications-networks-content-and-technology_en" target="_blank"&gt;DG Communications Networks, Content and Technology&lt;/a&gt;.&lt;/p&gt;</summary><content type="html">&lt;p&gt;NLnet manages the &lt;a href="https://nlnet.nl/discovery" target="_blank"&gt;NGI0 Discovery Fund&lt;/a&gt;, a fund dedicated to search technologies which creates an open, trustworthy and reliable internet for all. The fund was established with financial support from the &lt;a href="https://ec.europa.eu" target="_blank"&gt;European Commission&lt;/a&gt;'s &lt;a href="https://ngi.eu" target="_blank"&gt;Next Generation Internet&lt;/a&gt; programme, under the aegis of &lt;a href="https://ec.europa.eu/info/departments/communications-networks-content-and-technology_en" target="_blank"&gt;DG Communications Networks, Content and Technology&lt;/a&gt;.&lt;/p&gt;</content><category term="Decentralization"></category><category term="Search Engine"></category><category term="Math"></category><category term="Privacy"></category><category term="Funding"></category><category term="Grant"></category></entry><entry><title>LittleBee [on hold since Corona]</title><link href="/Projects/2019/LittleBee.html" rel="alternate"></link><published>2019-11-01T10:00:00+01:00</published><updated>2019-11-01T10:00:00+01:00</updated><author><name>Carolin Zöbelein</name></author><id>tag:None,2019-11-01:/Projects/2019/LittleBee.html</id><summary type="html"></summary><content type="html"></content><category term="Decentralization"></category><category term="Machine Learning"></category><category term="Python"></category><category term="Research"></category><category term="Math"></category><category term="Project"></category></entry><entry><title>Combsee</title><link href="/Projects/2019/Combsee.html" rel="alternate"></link><published>2019-08-15T10:00:00+02:00</published><updated>2019-08-15T10:00:00+02:00</updated><author><name>Carolin Zöbelein</name></author><id>tag:None,2019-08-15:/Projects/2019/Combsee.html</id><summary type="html">&lt;p&gt;Decentralized search for more privacy.&lt;/p&gt;
&lt;p&gt;A research and development project for a new type of decentralized, privacy preserving, search engine based on its mathematical design.
The aim of this project is to design a seriously open source alternative to the well known commercial search engines.&lt;/p&gt;</summary><content type="html">&lt;p&gt;Decentralized search for more privacy.&lt;/p&gt;
&lt;p&gt;A research and development project for a new type of decentralized, privacy preserving, search engine based on its mathematical design.
The aim of this project is to design a seriously open source alternative to the well known commercial search engines.&lt;/p&gt;</content><category term="Decentralization"></category><category term="Search Engine"></category><category term="Math"></category><category term="Privacy"></category><category term="Project"></category></entry><entry><title>Primes (part 05): Relationship between n̄ and n̄'</title><link href="/Public/Publications/Primes-part-05-Relationship-between-n-and-n.html" rel="alternate"></link><published>2019-06-06T20:00:00+02:00</published><updated>2019-06-06T20:00:00+02:00</updated><author><name>Carolin Zöbelein</name></author><id>tag:None,2019-06-06:/Public/Publications/Primes-part-05-Relationship-between-n-and-n.html</id><summary type="html">&lt;ul&gt;
&lt;li&gt;I. Page 1 - 4: Relationship between n̄ and n̄'.&lt;/li&gt;
&lt;/ul&gt;</summary><content type="html">&lt;ul&gt;
&lt;li&gt;I. Page 1 - 4: Relationship between n̄ and n̄'.&lt;/li&gt;
&lt;/ul&gt;</content><category term="Publication"></category><category term="Notes"></category></entry><entry><title>Primes (part 04): Playing around</title><link href="/Public/Publications/Primes-part-04-Playing-around.html" rel="alternate"></link><published>2019-05-21T20:00:00+02:00</published><updated>2019-05-21T20:00:00+02:00</updated><author><name>Carolin Zöbelein</name></author><id>tag:None,2019-05-21:/Public/Publications/Primes-part-04-Playing-around.html</id><summary type="html">&lt;ul&gt;
&lt;li&gt;I. Page 1 - 6: Extenting from &lt;span class="math"&gt;\(x\)&lt;/span&gt; to &lt;span class="math"&gt;\(\left(2xy + x + y\right)\)&lt;/span&gt; as part of k solution &lt;/li&gt;
&lt;li&gt;II. Page 7 - 10: Checking for possible additional terms and factors of this extension&lt;/li&gt;
&lt;li&gt;III. Page 11 - 17: Looking at common and not common factor(s) case of original &lt;span class="math"&gt;\(n\left(2x + 1\right)\)&lt;/span&gt; equation odd numbers &lt;span class="math"&gt;\(\left(2x + 1\right)\)&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</summary><content type="html">&lt;ul&gt;
&lt;li&gt;I. Page 1 - 6: Extenting from &lt;span class="math"&gt;\(x\)&lt;/span&gt; to &lt;span class="math"&gt;\(\left(2xy + x + y\right)\)&lt;/span&gt; as part of k solution &lt;/li&gt;
&lt;li&gt;II. Page 7 - 10: Checking for possible additional terms and factors of this extension&lt;/li&gt;
&lt;li&gt;III. Page 11 - 17: Looking at common and not common factor(s) case of original &lt;span class="math"&gt;\(n\left(2x + 1\right)\)&lt;/span&gt; equation odd numbers &lt;span class="math"&gt;\(\left(2x + 1\right)\)&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="Publication"></category><category term="Notes"></category></entry><entry><title>Primes (part 03): Recursion - New approach for also non-prime times tables</title><link href="/Public/Publications/Primes-part-03-Recursion-New-approach-for-also-non-prime-times-tables.html" rel="alternate"></link><published>2019-05-10T20:05:00+02:00</published><updated>2019-05-10T20:05:00+02:00</updated><author><name>Carolin Zöbelein</name></author><id>tag:None,2019-05-10:/Public/Publications/Primes-part-03-Recursion-New-approach-for-also-non-prime-times-tables.html</id><summary type="html">&lt;ul&gt;
&lt;li&gt;I. Page 1 - 4: Intersection of equations with common factors&lt;/li&gt;
&lt;/ul&gt;</summary><content type="html">&lt;ul&gt;
&lt;li&gt;I. Page 1 - 4: Intersection of equations with common factors&lt;/li&gt;
&lt;/ul&gt;</content><category term="Publication"></category><category term="Notes"></category></entry><entry><title>Primes (part 02): Recursion - First-step valid solutions</title><link href="/Public/Publications/Primes-part-02-Recursion-First-step-valid-solutions.html" rel="alternate"></link><published>2019-05-10T20:00:00+02:00</published><updated>2019-05-10T20:00:00+02:00</updated><author><name>Carolin Zöbelein</name></author><id>tag:None,2019-05-10:/Public/Publications/Primes-part-02-Recursion-First-step-valid-solutions.html</id><summary type="html">&lt;ul&gt;
&lt;li&gt;I. Tablet notes 1 - 4: z_{1,2} -solutions for the first intersection&lt;/li&gt;
&lt;li&gt;II. Scans 1 - 2: (k, ∆)-view on the first intersection solutions&lt;/li&gt;
&lt;/ul&gt;</summary><content type="html">&lt;ul&gt;
&lt;li&gt;I. Tablet notes 1 - 4: z_{1,2} -solutions for the first intersection&lt;/li&gt;
&lt;li&gt;II. Scans 1 - 2: (k, ∆)-view on the first intersection solutions&lt;/li&gt;
&lt;/ul&gt;</content><category term="Publication"></category><category term="Notes"></category></entry><entry><title>Primes (part 01): Recursion basics</title><link href="/Public/Publications/Primes-part-01-Recursion-basics.html" rel="alternate"></link><published>2019-05-04T20:00:00+02:00</published><updated>2019-05-04T20:00:00+02:00</updated><author><name>Carolin Zöbelein</name></author><id>tag:None,2019-05-04:/Public/Publications/Primes-part-01-Recursion-basics.html</id><summary type="html">&lt;ul&gt;
&lt;li&gt;I. Page 1 - 4: Basic equations and solution of the non-times-table equations intersection&lt;/li&gt;
&lt;li&gt;II. Page 5 - 5: Relationship between old and new (modified) equation&lt;/li&gt;
&lt;li&gt;III. Page 6 - 7: Relationship between old and new (modified) equation - Floor corrections&lt;/li&gt;
&lt;li&gt;IV. Page 8 - 14: General form of the intersection of an arbitrary number of non-times-table
equations&lt;/li&gt;
&lt;li&gt;V. Page 15 - 16: Non-times-table equation correction of Y i to the valid range, by substi-
tution&lt;/li&gt;
&lt;li&gt;VI. Page 17 - 20: Restriction on only odd solutions and the final, general intersection
equation&lt;/li&gt;
&lt;li&gt;VII. Page 21 - 22: Verification that our new (modified) equation is also valid (can used
without restrictions) during every recursion step&lt;/li&gt;
&lt;li&gt;VIII. Page 23 - 27: Determine valid Y i and z i, j ranges&lt;/li&gt;
&lt;li&gt;IX. Page 28 - 28: Approximations for Floor function&lt;/li&gt;
&lt;li&gt;X. Page 29 - 30: Let’s put all together. ToDo.&lt;/li&gt;
&lt;/ul&gt;</summary><content type="html">&lt;ul&gt;
&lt;li&gt;I. Page 1 - 4: Basic equations and solution of the non-times-table equations intersection&lt;/li&gt;
&lt;li&gt;II. Page 5 - 5: Relationship between old and new (modified) equation&lt;/li&gt;
&lt;li&gt;III. Page 6 - 7: Relationship between old and new (modified) equation - Floor corrections&lt;/li&gt;
&lt;li&gt;IV. Page 8 - 14: General form of the intersection of an arbitrary number of non-times-table
equations&lt;/li&gt;
&lt;li&gt;V. Page 15 - 16: Non-times-table equation correction of Y i to the valid range, by substi-
tution&lt;/li&gt;
&lt;li&gt;VI. Page 17 - 20: Restriction on only odd solutions and the final, general intersection
equation&lt;/li&gt;
&lt;li&gt;VII. Page 21 - 22: Verification that our new (modified) equation is also valid (can used
without restrictions) during every recursion step&lt;/li&gt;
&lt;li&gt;VIII. Page 23 - 27: Determine valid Y i and z i, j ranges&lt;/li&gt;
&lt;li&gt;IX. Page 28 - 28: Approximations for Floor function&lt;/li&gt;
&lt;li&gt;X. Page 29 - 30: Let’s put all together. ToDo.&lt;/li&gt;
&lt;/ul&gt;</content><category term="Publication"></category><category term="Notes"></category></entry><entry><title>Twitter secrets [on hold]</title><link href="/Projects/2018/Twitter-secrets.html" rel="alternate"></link><published>2019-04-13T10:00:00+02:00</published><updated>2019-04-13T10:00:00+02:00</updated><author><name>Carolin Zöbelein</name></author><id>tag:None,2019-04-13:/Projects/2018/Twitter-secrets.html</id><summary type="html"></summary><content type="html"></content><category term="AntiCensorship"></category><category term="Circumvention"></category><category term="Twitter"></category><category term="Project"></category></entry><entry><title>Why you should study Number Theory!</title><link href="/Public/Meetups/Why-you-should-study-Number-Theory.html" rel="alternate"></link><published>2018-10-03T07:00:00+02:00</published><updated>2018-10-03T07:00:00+02:00</updated><author><name>Carolin Zöbelein</name></author><id>tag:None,2018-10-03:/Public/Meetups/Why-you-should-study-Number-Theory.html</id><summary type="html">&lt;div&gt;
    &lt;i&gt;Why you should study Number Theory!&lt;/i&gt;, A friendly together for talking about Number Theory studies with coffee and tea.
&lt;/div&gt;</summary><content type="html">&lt;div&gt;
    &lt;i&gt;Why you should study Number Theory!&lt;/i&gt;, A friendly together for talking about Number Theory studies with coffee and tea.
&lt;/div&gt;</content><category term="Meetup"></category></entry><entry><title>primescalc</title><link href="/Public/Publications/primescalc.html" rel="alternate"></link><published>2017-12-15T23:00:00+01:00</published><updated>2017-12-15T23:00:00+01:00</updated><author><name>Carolin Zöbelein</name></author><id>tag:None,2017-12-15:/Public/Publications/primescalc.html</id><summary type="html"></summary><content type="html"></content><category term="Publication"></category><category term="Notes"></category></entry><entry><title>Dirac Observablen in der Kosmologie</title><link href="/Public/Publications/Dirac-Observablen-in-der-Kosmologie.html" rel="alternate"></link><published>2013-09-15T20:00:00+02:00</published><updated>2013-09-15T20:00:00+02:00</updated><author><name>Carolin Zöbelein</name></author><id>tag:None,2013-09-15:/Public/Publications/Dirac-Observablen-in-der-Kosmologie.html</id><summary type="html"></summary><content type="html"></content><category term="Publication"></category><category term="Thesis"></category><category term="Bachelor"></category><category term="Physics"></category></entry><entry><title>About the proof of the Collatz conjecture</title><link href="/Public/Publications/About-the-proof-of-the-Collatz-conjecture.html" rel="alternate"></link><published>2013-03-08T20:00:00+01:00</published><updated>2013-03-08T20:00:00+01:00</updated><author><name>Carolin Zöbelein</name></author><id>tag:None,2013-03-08:/Public/Publications/About-the-proof-of-the-Collatz-conjecture.html</id><summary type="html"></summary><content type="html"></content><category term="Publication"></category><category term="Preprint"></category></entry></feed>